# Stage 1: Build the Angular app
FROM node:20-alpine AS build
WORKDIR /app
COPY . .

# >>> Lançar para desenvolvimento, com o servidor de aplicação do Angular

# TODO:? Executar esses installs ao iniciar o container pra o build ficar mais leve
RUN npm install -g @angular/cli@19.1
RUN npm install

# Aparentemente, vai rodar como se tivesse na máquina local mesmo, não sei como nem porque, mas parece ser devido ao `--host 0.0.0.0`. O poll é para o hot-reload
CMD ["ng", "serve", "--host", "0.0.0.0", "--poll", "500"]


# >>> As instruções a seguir lançam como se fosse para produção, buildando os arquivos estaticos com o `ng build`, e servindo-os com nginx
# # Instalação de dependências, faz o build e remove as dependências de desenvolvimento
# RUN npm ci \
#     && npm run build \
#     && npm prune --production

# # Em produção mesmo, o container do nginx vai ser subido como uma api gateway para os microsserviços
# FROM nginx:alpine
# COPY --from=build /app/dist/microsservico-front-administracao/browser /usr/share/nginx/html
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]